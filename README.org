#+TITLE: Vue layer

[[file:img/vue.png]]

* Table of Contents                     :TOC_4_gh:noexport:
- [[#news][News]]
- [[#todos][TODOs]]
  - [[#matchit-wont-work-on-html][matchit won't work on html]]
  - [[#yasnippet-wont-work-on-js][yasnippet won't work on js]]
  - [[#company-wont-work][company won't work]]
- [[#description][Description]]
  - [[#features][Features:]]
- [[#install][Install]]
- [[#backends][Backends]]
  - [[#dumb][dumb]]
  - [[#lsp][lsp]]
- [[#key-bindings][Key bindings]]
  - [[#vue-mode][vue-mode]]
  - [[#formatting-prettier][Formatting (prettier)]]
  - [[#auto-complete-and-documentation-dumb][Auto-complete and documentation (dumb)]]
  - [[#lsp-keybindings][Lsp keybindings]]

* News
  dump =vue-mode= to use web-mode
* TODOs 
** TODO matchit won't work on html
** TODO yasnippet won't work on js
** TODO company won't work
   dumb mode
   
* Description
Layer for Vue, for working with  =.vue= files.

** Features:
- on-the-fly syntax checking with =eslint=
- proper syntax highlight and indentation with =vue-mode=
- two options for backend support for autocompletion and code analyis: =lsp= and =dumb= 
- code autocompletion with =company= layer
- formatting code with =prettier= layer
- =evil-matchit= =%= to jump between open and close tags
- =emmet-mode= and =yasnippet= for code expanding with =tab= key

* Install
To use this configuration layer, add it to your =~/.spacemacs=. You will need to
add =vue= to the existing =dotspacemacs-configuration-layers= list in this
file.

Vue layer uses the backend defined in variable =vue-backend=. Options are =dumb=
and =lsp=. Default is =dumb= backend. To choose a default backend set the layer
variable =vue-backend=:

#+BEGIN_SRC elisp
(vue :variables vue-backend 'lsp)
#+END_SRC

To use the on-the-fly syntax checking, install =eslint=:

#+BEGIN_SRC sh
  $ npm install -g eslint
#+END_SRC

Check eslint official doc for setting rules

To use automatic code formatting you need to install =prettier= with:

#+BEGIN_SRC sh
  $ npm install -g prettier
#+END_SRC

If you want to use local =eslint= and =prettier= in your project, turn on node
  layer =dotspacemacs-configuration-layers= function:

#+BEGIN_SRC elisp
     (node :variable node-add-modules-path)
#+END_SRC

* Backends 
** dumb
dumb backend is light weight and fast. =dumb-jump= is used to handled go to
definition (=gd= vim keybinding). Because of the template nature of vue, it
works very well. Company backend is set to =capf= which is very eager in
suggestions. =eslint= is used for linting.
   
at the moment =vue-html-mode= doesn't define its own syntax table so you may
encounter some glitches but it's very rare as described here:
https://github.com/AdamNiederer/vue-html-mode/issues/10 Add this to your
dotspacemacs/user-config as a workaround:

#+begin_src elisp
  (defun my/change-vue-html-mode-syntax-table ()
    (modify-syntax-entry ?: ".")
    (modify-syntax-entry ?' ".")
    (modify-syntax-entry ?. "."))
  (add-hook 'vue-html-mode-hook #'my/change-vue-html-mode-syntax-table)
#+end_src

** lsp
Vue language server needed to be installed 
   
#+BEGIN_SRC sh
   $ npm install -g vue-language-server
#+END_SRC
   
This backend provides all the fancy features like: jump to definition,
references, type inference... However, =eslint= is explicitly selected for linting
because it works better than =lsp=

* Key bindings
** vue-mode

| Key binding | Description                     |
|-------------+---------------------------------|
| ~SPC a~     | vue-mode-edit-all-indirect      |
| ~SPC p~     | vue-mode-edit-indirect-at-point |
| ~SPC v~     | vue-mode-reparse                |

** Formatting (prettier)

| Key binding | Description               |
|-------------+---------------------------|
| ~SPC m = =~ | format code with prettier |

** Auto-complete and documentation (dumb)

| Key binding   | Description                                                                              |
|---------------+------------------------------------------------------------------------------------------|
| ~SPC m g g~   | jump to the definition of the thing under the cursor                                     |
| ~SPC m g G~   | jump to definition for the given name                                                    |
** Lsp keybindings
see lsp layer 
